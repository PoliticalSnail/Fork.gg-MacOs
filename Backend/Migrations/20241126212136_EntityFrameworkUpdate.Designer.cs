// <auto-generated />
using System;
using Fork.Logic.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fork.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241126212136_EntityFrameworkUpdate")]
    partial class EntityFrameworkUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ForkCommon.Model.Application.SettingsKeyValue", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.ToTable("AppSettingsSet");
                });

            modelBuilder.Entity("ForkCommon.Model.Entity.Pocos.Automation.AutomationTime", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ServerId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("TimeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.HasIndex("TimeId");

                    b.ToTable("AutomationTime");
                });

            modelBuilder.Entity("ForkCommon.Model.Entity.Pocos.Automation.SimpleTime", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hours")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Minutes")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SimpleTime");
                });

            modelBuilder.Entity("ForkCommon.Model.Entity.Pocos.JavaSettings", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("JavaPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxRam")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StartupParameters")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("JavaSettings");
                });

            modelBuilder.Entity("ForkCommon.Model.Entity.Pocos.Player.Player", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Head")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOfflinePlayer")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Uid");

                    b.ToTable("PlayerSet");
                });

            modelBuilder.Entity("ForkCommon.Model.Entity.Pocos.Player.ServerPlayer", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("ServerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("ServerId");

                    b.ToTable("ServerPlayer");
                });

            modelBuilder.Entity("ForkCommon.Model.Entity.Pocos.Server", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AutoSetSha1")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Initialized")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("JavaSettingsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ResourcePackHashAge")
                        .HasColumnType("TEXT");

                    b.Property<int>("ServerIconId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("StartWithFork")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("VersionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("JavaSettingsId");

                    b.HasIndex("VersionId");

                    b.ToTable("ServerSet");
                });

            modelBuilder.Entity("ForkCommon.Model.Entity.Pocos.ServerVersion", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Build")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JarLink")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Version")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ServerVersion");
                });

            modelBuilder.Entity("ForkCommon.Model.Entity.Pocos.Automation.AutomationTime", b =>
                {
                    b.HasOne("ForkCommon.Model.Entity.Pocos.Server", "Server")
                        .WithMany("AutomationTimes")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ForkCommon.Model.Entity.Pocos.Automation.SimpleTime", "Time")
                        .WithMany()
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Server");

                    b.Navigation("Time");
                });

            modelBuilder.Entity("ForkCommon.Model.Entity.Pocos.Player.ServerPlayer", b =>
                {
                    b.HasOne("ForkCommon.Model.Entity.Pocos.Player.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ForkCommon.Model.Entity.Pocos.Server", "Server")
                        .WithMany("ServerPlayers")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("ForkCommon.Model.Entity.Pocos.Server", b =>
                {
                    b.HasOne("ForkCommon.Model.Entity.Pocos.JavaSettings", "JavaSettings")
                        .WithMany()
                        .HasForeignKey("JavaSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ForkCommon.Model.Entity.Pocos.ServerVersion", "Version")
                        .WithMany()
                        .HasForeignKey("VersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JavaSettings");

                    b.Navigation("Version");
                });

            modelBuilder.Entity("ForkCommon.Model.Entity.Pocos.Server", b =>
                {
                    b.Navigation("AutomationTimes");

                    b.Navigation("ServerPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
