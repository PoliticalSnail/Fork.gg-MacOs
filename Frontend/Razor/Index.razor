@page "/"
@using ForkFrontend.Logic.Services.Managers
@inject ApplicationStateManager ApplicationState

<LoadingOverlay Visible="@ApplicationState.UiLoadingBlocked" TranslationPath="@ApplicationState.UiLoadingTextPath"/>
<ToastDisplay/>
<div class="flex flex-col flex-1">
    @if (ApplicationState.IsApplicationReady)
    {
        <div class="flex flex-1 gap-2 overflow-hidden">
            @* Sidebar *@
            <CascadingValue Name="@nameof(SelectedEntity)" Value="SelectedEntity">
                <Sidebar Parent="this" OnSelectEntity="OnSelectEntity"
                         EntityManagers="ApplicationState.EntityStateManagersById"/>
            </CascadingValue>
            @* Content *@
            <div class="flex-1">
                @if (_openScreen != null)
                {
                    <ForkErrorBoundary>
                        <ChildContent>
                            <DynamicComponent Type="_openScreen.Type" Parameters="_openScreen.Parameters"/>
                        </ChildContent>
                        <ErrorContent>
                            <div>Error Content</div>
                        </ErrorContent>
                    </ForkErrorBoundary>
                }
                @if (ApplicationState.EntityStateManagersById.Count > 0)
                {
                    foreach (KeyValuePair<ulong, EntityStateManager> entity in ApplicationState.EntityStateManagersById)
                    {
                        <div class="@(entity.Key == SelectedEntity?.Id ? "h-full" : "hidden")">
                            <Entity @key="@entity.Key" Value="entity.Value"></Entity>
                        </div>
                    }
                }
                else
                {
                    @* TODO CKE Welcome Screen if no server exists *@
                    <div></div>
                }
            </div>
        </div>
    }
    else
    {
        <div class="w-screen h-screen flex justify-center items-center bg-new-black flex-col">
            <span class="text-new-offwhite text-lg">@ApplicationState.ApplicationStatus</span>
            <LoadingGifIcon Width="116"/>
        </div>
    }

</div>

@code
{
    protected override void OnInitialized()
    {
        base.OnInitialized();
        ApplicationState.UiLoadingChanged += StateHasChanged;
    }
}