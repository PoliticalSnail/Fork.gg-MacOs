@using ForkCommon.Model.Entity.Pocos.Player
@*
    This is basically the same as PlayerComponent, but with status indicator and a different Value
*@
<div class="hover:text-label-hover @(IsActive ? "bg-forkBlue-hover text-label-hover" : "text-text-dark cursor-pointer")" @onclick="OnClick">
    <div class="flex px-7 py-3">
        @* Status Indicator *@
        <div style="height: 8px; width: 8px;" class="self-center rounded-full @(Value is { IsOnline: true } ? "bg-status-green" : "bg-status-inactive")"></div>

        @* Player Head *@
        <div class="mx-2 self-center">
            <img class="w-8 pixelated @(Value is { IsOnline: true } ? "" : "opacity-20")" src="@($"data:image/png;base64,{Value?.Player.Head}")" alt=""/>
        </div>

        @* Player name *@
        <div>
            <div class="text-lg">@Value?.Player.Name</div>
            <div class="text-xs">@(Value is { IsOp: true } ? "operator" : "member")</div>
        </div>
    </div>
</div>

@code {

    [CascadingParameter] public Playerlist? Parent { get; set; }

    [Parameter] public ServerPlayer? Value { get; set; }

    private bool IsActive => Parent?.ActivePlayer != null && Parent.ActivePlayer.Equals(Value);

    private void OnClick(EventArgs e)
    {
        Parent?.SelectPlayer(this);
    }

}